class Solution {
    public int maximumWealth(int[][] accounts) {
        int maxWealthSoFar = 0; 

        for(int[] customer: accounts ) { 
            //we must iterate through each customer account, and for each, iterate through their banks 
        //FOR EACH LOOP - we must have an object that is iterable(accounts array) i.e. the object can store multiple values which we can access on e after the other 
        //We then declare a variable with the same data type as the value stored in our array - these are the rows in our accounts table 
        //The for loop will then go through each value in our array saving the current value it is on in the declared variable for us to access
        //This loop is helpful when you want to perform the same operations on all values in an array 
        int currentCustomerWealth =0;

        for(int bank: customer) {
            //This FOR EACH LOOP goes through all the bank accounts the customer has money in 
            //These are the values in our row as we sum from left to right
            currentCustomerWealth += bank; //For each bank, we can add the money to our current customer wealth 

        }
        maxWealthSoFar = Math.max(maxWealthSoFar, currentCustomerWealth);
        //Returns the larger of two integer values
        }
        return maxWealthSoFar; 
    }
    //Time complexity: O(nxm) - We must traverse over n customers for each traverse over m number of banks
    //Space complexity: o(1) - constant because we do not create another data structure proportional in size to the input 
}
